{"version":3,"sources":["serviceWorker.js","App.js","components/SelectTable.js","components/Post.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","moment","locale","App","useState","facebookName","setFBName","pageToken","setToken","posts","setPosts","page","setPage","post","setPost","url","setUrl","Form","useForm","form","className","to","name","style","display","justifyContent","Item","label","onChange","event","target","value","placeholder","type","onClick","e","preventDefault","extract","split","console","log","axios","get","then","response","data","catch","error","res","access_token","err","message","created_time","pathname","state","id","SelectTable","token","toDelete","setDelete","deleteRows","setDelRows","configTime","setCfgTime","autoMode","setMode","keepRows","setKeepRows","setData","status","setStatus","useEffect","Axios","handleDelete","deleteStatus","i","includes","find","item","length","push","every","delete","filter","initialState","alert","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","content","width","Option","selected","size","marginRight","prevState","setInterval","deleteData","forEach","dt","replace","text","columns","title","dataIndex","key","render","format","Title","Typography","margin","disabled","backgroundColor","color","trigger","placement","fontSize","fontWeight","marginLeft","dataSource","rowKey","footer","flexDirection","map","padding","class","Post","this","props","Component","Routes","basename","path","exact","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c3ca283.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"antd/dist/antd.css\";\nimport \"moment/locale/vi\";\n\nimport { Form, Input, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nmoment.locale(\"vi\");\nfunction App() {\n  const [facebookName, setFBName] = useState([]);\n  const [pageToken, setToken] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(null);\n  const [post, setPost] = useState(null);\n  const [url, setUrl] = useState(null);\n  const [form] = Form.useForm();\n\n  const handleChangeToken = e => {\n    setToken(e.target.value);\n    console.log(e.target.value);\n  };\n\n  // const handleChangePost = event => {\n  //   console.log(event.target.value);\n  //   setPost(event.target.value);\n  // };\n  // const handleChangePage = event => {\n  //   setPage(event.target.value);\n  // };\n\n  const extractUrl = e => {\n    e.preventDefault();\n    let extract = url.split(\"/\");\n\n    console.log(extract);\n\n    setPage(extract[3]);\n    setPost(extract[5]);\n\n    e.preventDefault();\n    // console.log(event);\n    axios\n      .get(\n        `https://graph.facebook.com/v6.0/${extract[3]}_${extract[5]}?access_token=${pageToken}`\n      )\n      .then(response => {\n        console.log(response.data);\n        setPosts(response.data);\n        console.log(posts);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    axios\n      .get(\n        `https://graph.facebook.com/v6.0/${extract[3]}?fields=access_token&access_token=${pageToken}`\n      )\n      .then(res => {\n        console.log(res.data.access_token);\n        setToken(res.data.access_token);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleChangeUrl = event => {\n    setUrl(event.target.value);\n  };\n  const handleFetchAPI = event => {\n    event.preventDefault();\n    axios\n      .get(`https://graph.facebook.com/v6.0/me?access_token=${pageToken}`)\n      .then(response => {\n        console.log(response.data);\n        setFBName(response.data);\n      });\n  };\n  // const handleSubmit = event => {\n  //   event.preventDefault();\n  //   // console.log(event);\n  //   axios\n  //     .get(\n  //       `https://graph.facebook.com/v6.0/${page}_${post}?access_token=${pageToken}`\n  //     )\n  //     .then(response => {\n  //       console.log(response.data);\n  //       setPosts(response.data);\n  //       console.log(posts);\n  //     })\n  //     .catch(error => {\n  //       console.log(error);\n  //     });\n  //   axios\n  //     .get(\n  //       `https://graph.facebook.com/v6.0/${page}?fields=access_token&access_token=${pageToken}`\n  //     )\n  //     .then(res => {\n  //       console.log(res.data.access_token);\n  //       setToken(res.data.access_token);\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        <Link to=\"/\">Comment Delete Tool</Link>\n      </h1>\n      <p>Powered by Maximusss - Leauge Of Legends Support Semi-pro gamer.</p>\n\n      {facebookName.name ? (\n        <div>\n          <Form\n            form={form}\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            {/* <Form.Item label=\"Mã trang\" style={{ marginRight: 20 }}>\n              <Input\n                name=\"page\"\n                onChange={handleChangePage}\n                placeholder=\"Nhập mã trang\"\n              />\n            </Form.Item>\n            <Form.Item label=\"Mã bài viết\">\n              <Input\n                name=\"post\"\n                onChange={handleChangePost}\n                placeholder=\"Nhập mã bài viết\"\n              />\n            </Form.Item> */}\n            <Form.Item label=\"Đường link bài viết\">\n              <Input\n                name=\"post\"\n                onChange={handleChangeUrl}\n                placeholder=\"Nhập mã bài viết\"\n              />\n            </Form.Item>{\" \"}\n            <Form.Item>\n              <Button type=\"primary\" onClick={extractUrl}>\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n          {posts.message ? (\n            <div>\n              \n              <h3>{posts.message}</h3>\n              <h3>{posts.created_time}</h3>\n              <Link\n                // onClick={() => console.log(\"Token của tôi là \" + token)}\n                to={{\n                  pathname: `/post/${post}`,\n                  state: { id: `${page}_${post}`, access_token: pageToken }\n                }}\n              >\n                Chạy\n              </Link>\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          {/* <Tabular data={} token={pageToken} /> */}\n        </div>\n      ) : (\n        <Form form={form} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Form.Item label=\"Nhập Access Token từ BM\">\n            <Input\n              name=\"post\"\n              onChange={handleChangeToken}\n              placeholder=\"Nhập access token\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" onClick={handleFetchAPI}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"moment/locale/vi\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Popover,\r\n  Divider,\r\n  Typography\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst SelectTable = ({ id, token }) => {\r\n  const [toDelete, setDelete] = useState(true);\r\n  const [deleteRows, setDelRows] = useState([]);\r\n  const [configTime, setCfgTime] = useState(null);\r\n  const [autoMode, setMode] = useState(false);\r\n  const [keepRows, setKeepRows] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [status, setStatus] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `https://graph.facebook.com/v6.0/${id}/comments?access_token=${token}`\r\n    ).then(response => {\r\n      setData(response.data.data);\r\n    });\r\n    console.log(\"Loading dữ liệu\");\r\n  }, []);\r\n\r\n  const initialState = id => {\r\n    setData(\r\n      data.filter(item => {\r\n        return item.id !== id;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    var deleteStatus = [];\r\n\r\n    for (let i in deleteRows) {\r\n      if (\r\n        keepRows.includes(\r\n          keepRows.find(item => item.id === deleteRows[i].id)\r\n        ) ||\r\n        deleteRows.length === 0\r\n      ) {\r\n        deleteStatus.push(0);\r\n      } else {\r\n        deleteStatus.push(1);\r\n      }\r\n    }\r\n    let testResult = deleteStatus.every(item => {\r\n      return item === 1;\r\n    });\r\n    if (testResult) {\r\n      for (let i = 0; i < deleteRows.length; i++) {\r\n        Axios.delete(\r\n          `https://graph.facebook.com/v6.0/${deleteRows[i].id}?access_token=${token}`\r\n        )\r\n          .then(response => {\r\n            // Handling UI\r\n            initialState(deleteRows[i].id);\r\n            // alert(\"Xóa thành công\");\r\n          })\r\n          .catch(error => {\r\n            console.log(\"Xóa thất bại\");\r\n            console.log(error);\r\n          });\r\n      }\r\n      // alert(\"Xóa thành công\");\r\n      console.log(\"Xóa thành công\");\r\n    } else {\r\n      alert(\"Không thể xóa những comments đã khóa\");\r\n    }\r\n  };\r\n\r\n  const handleKeepData = () => {\r\n    setKeepRows(deleteRows);\r\n    setDelRows([]);\r\n    setDelete(true);\r\n  };\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      if (selectedRows.length > 0) {\r\n        setDelete(false);\r\n        setDelRows(selectedRows);\r\n      } else {\r\n        setDelete(true);\r\n      }\r\n    },\r\n    getCheckboxProps: record => ({\r\n      name: record.name\r\n    })\r\n  };\r\n\r\n  const autoStart = () => {\r\n    setDelete(true);\r\n    setMode(true);\r\n    setStatus(prevState => [\r\n      ...prevState,\r\n      `Chuẩn bị chạy tự động, thời gian mỗi lần là ${configTime} ms`\r\n    ]);\r\n    setInterval(() => {\r\n      setStatus(prevState => [...prevState, \"Bắt đầu chạy tự động\"]);\r\n      var deleteData = [];\r\n      Axios.get(\r\n        `https://graph.facebook.com/v6.0/${id}/comments?access_token=${token}`\r\n      ).then(response => {\r\n        setData(response.data.data);\r\n        // console.log(response.data.data);\r\n        // console.log(keepRows);\r\n        if (response.data.data.length === keepRows.length) {\r\n          // console.log(\"Không có gì để xóa\");\r\n          setStatus(prevState => [\r\n            ...prevState,\r\n            \"Không có gì để xóa, chuẩn bị lần chạy tiếp theo\"\r\n          ]);\r\n          // console.log(deleteData);\r\n        } else {\r\n          for (let i = 0; i < response.data.data.length; i++) {\r\n            if (\r\n              !keepRows.includes(\r\n                keepRows.find(item => item.id === response.data.data[i].id)\r\n              )\r\n            ) {\r\n              deleteData.push(response.data.data[i]);\r\n            }\r\n          }\r\n          // console.log(\"Sau khi đưa vào hàng chờ\");\r\n          setStatus(prevState => [\r\n            ...prevState,\r\n            `Phát hiện ${deleteData.length} comments cần được xóa`\r\n          ]);\r\n\r\n          // console.log(deleteData);\r\n          deleteData.forEach(item => {\r\n            Axios.delete(\r\n              `https://graph.facebook.com/v6.0/${item.id}?access_token=${token}`\r\n            )\r\n              .then(res => {\r\n                // console.log(\"Xóa thành công\");\r\n                setStatus(prevState => [...prevState, \"Xóa thành công\"]);\r\n                setData(response.data.data);\r\n                deleteData = deleteData.filter(dt => {\r\n                  return dt.id !== item.id;\r\n                });\r\n              })\r\n              .catch(error => {\r\n                setStatus(prevState => [...prevState, \"Xóa thất bại\"]);\r\n                console.log(error);\r\n              });\r\n          });\r\n          // console.log(\"Sau khi hoàn tất xóa: \");\r\n          // console.log(deleteData.length);\r\n          // console.log(deleteData);\r\n        }\r\n      });\r\n    }, configTime);\r\n  };\r\n\r\n  const cancelAuto = () => {\r\n    alert(\"Hủy auto thành công\");\r\n    window.location.replace(\"/xoacoment\");\r\n  };\r\n\r\n  const handleConfigChange = event => {\r\n    // setCfgTime(event.target.value);\r\n    // console.log(event);\r\n    setCfgTime(event);\r\n    // console.log(event);\r\n    // console.log(configTime);\r\n  };\r\n\r\n  const content = (\r\n    <Form form={form}>\r\n      <Form.Item label=\"Thời gian\">\r\n        <Select onChange={handleConfigChange} style={{ width: 100 }}>\r\n          <Select.Option value=\"5000\">5 giây</Select.Option>\r\n          <Select.Option selected value=\"10000\">\r\n            10 giây\r\n          </Select.Option>\r\n          <Select.Option value=\"30000\">30 giây</Select.Option>\r\n          <Select.Option value=\"60000\">1 phút</Select.Option>\r\n          <Select.Option value=\"300000\">5 phút</Select.Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Divider />\r\n      <Button\r\n        type=\"danger\"\r\n        size=\"middle\"\r\n        style={{ marginRight: 10 }}\r\n        onClick={() => autoStart(id)}\r\n      >\r\n        Bắt đầu\r\n      </Button>\r\n      <Button type=\"ghost\" size=\"middle\" onClick={() => cancelAuto()}>\r\n        Hủy\r\n      </Button>\r\n    </Form>\r\n  );\r\n  const text = <h2>Cài đặt tự động</h2>;\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Mã bình luận\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Thời gian tạo\",\r\n      key: \"created_time\",\r\n      render: (text, record) => (\r\n        <span>{moment(record.created_time).format(\"LLLL\")}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"Thông tin bình luận\",\r\n      key: \"message\",\r\n      dataIndex: \"message\"\r\n    }\r\n  ];\r\n\r\n  const { Title } = Typography;\r\n  return (\r\n    <div>\r\n      {/* <h1 style={{ padding: 10, margin: 10 }}>Quản lý bài viết {id}</h1> */}\r\n      <Button\r\n        style={{ margin: 12 }}\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        disabled={toDelete}\r\n        // onClick={handleDelete()}\r\n        onClick={() => handleDelete(deleteRows)}\r\n      >\r\n        Xóa\r\n      </Button>\r\n\r\n      <Button\r\n        style={{\r\n          margin: 12,\r\n          backgroundColor: toDelete ? \"#f7f7f7\" : \"green\",\r\n          color: toDelete ? \"#cccccc\" : \"white\"\r\n        }}\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        disabled={toDelete}\r\n        onClick={handleKeepData}\r\n      >\r\n        Giữ\r\n      </Button>\r\n      <Popover\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button style={{ margin: 10 }} type=\"danger\" size=\"large\">\r\n          Xóa tự động\r\n        </Button>\r\n      </Popover>\r\n      <Link style={{ fontSize: 20, fontWeight: 400, marginLeft: 10 }} to=\"/\">\r\n        Trở về trang chủ\r\n      </Link>\r\n      <Table\r\n        rowSelection={{\r\n          type: \"checkbox\",\r\n          ...rowSelection\r\n        }}\r\n        dataSource={data}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        title={() => `Quản lý bài viết ${id}`}\r\n        footer={() => `Danh sách bao gồm ${data.length} comments`}\r\n      />\r\n      {autoMode ? (\r\n        <div className=\"status-board\" style={{ margin: 10, width: 600 }}>\r\n          <Title type=\"warning\" style={{ fontSize: 18 }}>\r\n            Trạng thái chạy Auto\r\n          </Title>\r\n          <div\r\n            className=\"status\"\r\n            style={{\r\n              fontSize: 15,\r\n              backgroundColor: \"gainsboro\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\"\r\n            }}\r\n          >\r\n            {status.map(item => {\r\n              return <code style={{ padding: 10 }}>{item}</code>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n\r\n      <div class=\"auto-section\">\r\n        <div className=\"keep-id\">\r\n          {keepRows.length > 0 ? (\r\n            <div style={{ margin: 20 }}>\r\n              <Table\r\n                dataSource={keepRows}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                title={() => `Danh sách các comment giữ lại`}\r\n                footer={() => `Bao gồm ${keepRows.length} comments`}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectTable;\r\n","import React, { Component } from \"react\";\r\nimport SelectTable from \"./SelectTable\";\r\n\r\nclass Post extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props.location.state.access_token);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectTable\r\n          id={this.props.location.state.id}\r\n          token={this.props.location.state.access_token}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Post from \"./components/Post\";\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={window.location.pathname || \"\"}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={App} />\r\n          <Route path=\"/post/:id\" component={Post} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Routes from \"./Routes\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}