{"version":3,"sources":["serviceWorker.js","components/Tabular.js","App.js","components/SelectTable.js","components/Post.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Tabular","data","token","columns","title","dataIndex","key","render","text","record","moment","created_time","format","onClick","console","log","to","pathname","id","state","access_token","style","margin","size","footer","length","dataSource","rowKey","locale","App","useState","facebookName","setFBName","pageToken","setToken","posts","setPosts","fetchUserFeed","access","axios","get","then","response","res","className","onChange","event","pageData","split","catch","error","width","map","item","Option","value","name","appId","autoLoad","fields","callback","accessToken","toDelete","setDelete","deleteRows","setDelRows","configTime","setCfgTime","keepRows","setKeepRows","setData","Form","useForm","form","useEffect","Axios","handleDelete","ids","i","delete","filter","initialState","alert","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","autoStart","setInterval","deleteData","includes","find","push","forEach","content","Item","label","selected","type","marginRight","reload","disabled","backgroundColor","color","trigger","placement","fontSize","fontWeight","marginLeft","class","Post","props","handleChangeState","newData","setState","showCommentList","this","SelectTable","Component","Routes","basename","path","exact","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b30644f1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"moment/locale/vi\";\r\nimport { Table } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Tabular = ({ data, token }) => {\r\n  const columns = [\r\n    {\r\n      title: \"Mã bài viết\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Thời gian tạo\",\r\n      key: \"created_time\",\r\n      render: (text, record) => (\r\n        <span>{moment(record.created_time).format(\"LLLL\")}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"Thao tác\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Link\r\n          onClick={() => console.log(\"Token của tôi là \" + token)}\r\n          to={{\r\n            pathname: `/post/${record.id}`,\r\n            state: { id: record.id, access_token: token }\r\n          }}\r\n        >\r\n          Chạy\r\n        </Link>\r\n      )\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      <Table\r\n        style={{ margin: 20 }}\r\n        size=\"middle\"\r\n        footer={() => `Danh sách bao gồm ${data.length} bài viết`}\r\n        dataSource={data}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabular;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport FacebookLogin from \"react-facebook-login\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"antd/dist/antd.css\";\nimport \"moment/locale/vi\";\nimport Tabular from \"./components/Tabular\";\n\nimport { Select } from \"antd\";\n\nmoment.locale(\"vi\");\nfunction App() {\n  const [facebookName, setFBName] = useState([]);\n  const [pageToken, setToken] = useState(null);\n  const [posts, setPosts] = useState([]);\n\n  const responseFacebook = response => {\n    fetchUserFeed(response.accessToken);\n  };\n\n  const fetchUserFeed = access => {\n    axios\n      .get(`https://graph.facebook.com/v6.0/me/accounts?access_token=${access}`)\n      .then(response => {\n        // setFBName(response.data.data[0].name);\n        setFBName(response.data.data);\n        console.log(\"Good\");\n        return axios.get(\n          `https://graph.facebook.com/v6.0/${response.data.data[0].id}/feed/?access_token=${response.data.data[0].access_token}`\n        );\n      })\n      .then(res => {\n        // setPosts(res.data.data);\n      });\n  };\n\n  const handlePageChange = event => {\n    let pageData = event.split(\" \");\n    setToken(pageData[1]);\n    console.log(pageToken);\n    console.log(pageData);\n\n    axios\n      .get(\n        `https://graph.facebook.com/v6.0/${pageData[0]}/feed/?access_token=${pageData[1]}`\n      )\n      .then(res => {\n        setPosts(res.data.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Tool xóa comment</h1>\n      {facebookName.length > 0 ? (\n        <div>\n          <h3>\n            Fanpage:{\" \"}\n            <Select onChange={handlePageChange} style={{ width: 500 }}>\n              {facebookName.map(item => {\n                return (\n                  <Select.Option\n                    key={item.id}\n                    value={item.id + \" \" + item.access_token}\n                  >\n                    {item.name}\n                  </Select.Option>\n                );\n              })}\n            </Select>\n          </h3>\n          <Tabular data={posts} token={pageToken} />\n        </div>\n      ) : (\n        <FacebookLogin\n          appId=\"2623573851104227\"\n          autoLoad={true}\n          size=\"small\"\n          fields=\"name,email,picture,pages_show_list,manage_pages,publish_pages\"\n          callback={responseFacebook}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"moment/locale/vi\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Button,\r\n  Table,\r\n  Popover,\r\n  Divider\r\n} from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst Tabular = ({ id, token }) => {\r\n  const [toDelete, setDelete] = useState(true);\r\n  const [deleteRows, setDelRows] = useState([]);\r\n  const [configTime, setCfgTime] = useState(null);\r\n  const [keepRows, setKeepRows] = useState([]);\r\n  const [data, setData] = useState([]);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `https://graph.facebook.com/v6.0/${id}/comments?access_token=${token}`\r\n    ).then(response => {\r\n      setData(response.data.data);\r\n    });\r\n  });\r\n\r\n  const initialState = id => {\r\n    setData(\r\n      data.filter(item => {\r\n        return item.id !== id;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = ([...ids]) => {\r\n    for (let i = 0; i < ids.length; i++) {\r\n      Axios.delete(\r\n        `https://graph.facebook.com/v6.0/${ids[i].id}?access_token=${token}`\r\n      )\r\n        .then(response => {\r\n          initialState(ids[i].id);\r\n          alert(\"Xóa thành công\");\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Xóa thất bại\");\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleKeepData = () => {\r\n    setKeepRows(deleteRows);\r\n    setDelRows([]);\r\n    setDelete(true);\r\n  };\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(\r\n        `selectedRowKeys: ${selectedRowKeys}`,\r\n        \"selectedRows: \",\r\n        selectedRows,\r\n        \"Number of Selected Rows: \",\r\n        selectedRows.length\r\n      );\r\n      if (selectedRows.length > 0) {\r\n        setDelete(false);\r\n        setDelRows(selectedRows);\r\n        // setKeepRows(selectedRows);\r\n      } else {\r\n        setDelete(true);\r\n      }\r\n    },\r\n    getCheckboxProps: record => ({\r\n      name: record.name\r\n    })\r\n  };\r\n\r\n  const autoStart = () => {\r\n    setDelete(true);\r\n    console.log(\"Chuẩn bị chạy tự động...\");\r\n    setInterval(() => {\r\n      console.log(\"Bắt đầu\");\r\n      Axios.get(\r\n        `https://graph.facebook.com/v6.0/${id}/comments?access_token=${token}`\r\n      ).then(response => {\r\n        setData(response.data.data);\r\n        if (response.data.data.length === keepRows.length) {\r\n          console.log(\"Không có gì để xóa\");\r\n        } else {\r\n          var deleteData = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            if (\r\n              !keepRows.includes(keepRows.find(item => item.id === data[i].id))\r\n            ) {\r\n              deleteData.push(data[i]);\r\n            }\r\n          }\r\n          deleteData.forEach(item => {\r\n            Axios.delete(\r\n              `https://graph.facebook.com/v6.0/${item.id}?access_token=${token}`\r\n            )\r\n              .then(res => {\r\n                console.log(\"Xóa thành công\");\r\n                setData(response.data.data);\r\n              })\r\n              .catch(error => {\r\n                console.log(\"Xóa thất bại\");\r\n              });\r\n          });\r\n        }\r\n      });\r\n    }, configTime);\r\n  };\r\n\r\n  const cancelAuto = () => {\r\n    alert(\"Hủy Auto thành công\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleConfigChange = event => {\r\n    // setCfgTime(event.target.value);\r\n    // console.log(event);\r\n    setCfgTime(event);\r\n    console.log(event);\r\n    console.log(configTime);\r\n  };\r\n\r\n  const content = (\r\n    <Form form={form}>\r\n      <Form.Item label=\"Thời gian\">\r\n        <Select onChange={handleConfigChange} style={{ width: 100 }}>\r\n          <Select.Option value=\"5000\">5 giây</Select.Option>\r\n          <Select.Option selected value=\"10000\">\r\n            10 giây\r\n          </Select.Option>\r\n          <Select.Option value=\"30000\">30 giây</Select.Option>\r\n          <Select.Option value=\"60000\">1 phút</Select.Option>\r\n          <Select.Option value=\"300000\">5 phút</Select.Option>\r\n        </Select>\r\n      </Form.Item>\r\n      <Divider />\r\n      <Button\r\n        type=\"danger\"\r\n        size=\"middle\"\r\n        style={{ marginRight: 10 }}\r\n        onClick={() => autoStart(id)}\r\n      >\r\n        Bắt đầu\r\n      </Button>\r\n      <Button type=\"ghost\" size=\"middle\" onClick={() => cancelAuto(autoStart)}>\r\n        Hủy\r\n      </Button>\r\n    </Form>\r\n  );\r\n  const text = <h2>Cài đặt tự động</h2>;\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Mã bình luận\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Thời gian tạo\",\r\n      key: \"created_time\",\r\n      render: (text, record) => (\r\n        <span>{moment(record.created_time).format(\"LLLL\")}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"Thông tin bình luận\",\r\n      key: \"message\",\r\n      dataIndex: \"message\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1 style={{ padding: 10, margin: 10 }}>Quản lý bài viết {id}</h1> */}\r\n      <Button\r\n        style={{ margin: 12 }}\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        disabled={toDelete}\r\n        // onClick={handleDelete()}\r\n        onClick={() => handleDelete(deleteRows)}\r\n      >\r\n        Xóa\r\n      </Button>\r\n\r\n      <Button\r\n        style={{\r\n          margin: 12,\r\n          backgroundColor: toDelete ? \"#f7f7f7\" : \"green\",\r\n          color: toDelete ? \"#cccccc\" : \"white\"\r\n        }}\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        disabled={toDelete}\r\n        onClick={handleKeepData}\r\n      >\r\n        Giữ\r\n      </Button>\r\n      <Popover\r\n        title={text}\r\n        content={content}\r\n        trigger=\"click\"\r\n        placement=\"bottom\"\r\n      >\r\n        <Button style={{ margin: 10 }} type=\"danger\" size=\"large\">\r\n          Xóa tự động\r\n        </Button>\r\n      </Popover>\r\n      <Link style={{ fontSize: 20, fontWeight: 400, marginLeft: 10 }} to=\"/\">\r\n        Trở về trang chủ\r\n      </Link>\r\n      <Table\r\n        rowSelection={{\r\n          type: \"checkbox\",\r\n          ...rowSelection\r\n        }}\r\n        dataSource={data}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        title={() => `Quản lý bài viết ${id}`}\r\n        footer={() => `Danh sách bao gồm ${data.length} comments`}\r\n      />\r\n\r\n      <div class=\"auto-section\">\r\n        <div className=\"keep-id\">\r\n          {keepRows.length > 0 ? (\r\n            <div style={{ margin: 20 }}>\r\n              <Table\r\n                dataSource={keepRows}\r\n                columns={columns}\r\n                rowKey=\"id\"\r\n                title={() => `Danh sách các comment giữ lại`}\r\n                footer={() => `Bao gồm ${keepRows.length} comments`}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabular;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\nimport SelectTable from \"./SelectTable\";\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let id = this.props.location.state.id;\r\n    let token = this.props.location.state.access_token;\r\n    console.log(this.props.location.state);\r\n    Axios.get(\r\n      `https://graph.facebook.com/v6.0/${id}/comments?access_token=${token}`\r\n    ).then(response => {\r\n      this.setState({ data: response.data.data });\r\n    });\r\n  }\r\n\r\n  handleChangeState = id => {\r\n    let newState = this.state.data;\r\n    let newData = newState.filter(item => {\r\n      return item.id !== id;\r\n    });\r\n    this.setState({ data: newData });\r\n  };\r\n\r\n  showCommentList = () => {\r\n    let id = this.props.location.state.id;\r\n    let token = this.props.location.state.access_token;\r\n    Axios.get(\r\n      `https://graph.facebook.com/v6.0/${id}/comments?access_token=${token}`\r\n    ).then(response => {\r\n      this.setState({ data: response.data.data });\r\n      console.log(this.state.data);\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectTable\r\n          id={this.props.location.state.id}\r\n          token={this.props.location.state.access_token}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Post from \"./components/Post\";\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={window.location.pathname || \"\"}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={App} />\r\n          <Route path=\"/post/:id\" component={Post} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}